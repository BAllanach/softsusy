-------------------------------------------------
		   SOFTSUSY
-------------------------------------------------
by: B C Allanach, P Athron, M Bernhardt, D Grellscheid, M Hanussek, C H Kom, P
		   Slavich, L Tunstall, A Voigt and A G Williams 

QUICK INSTALLATION AND RUN TEST
-------------------------------

Download the gzipped tarball, from the SOFTSUSY homepage 
http://projects.hepforge.org/softsusy/ for instance softsusy-3.4.0.tar.gz. Then,
type (on a linux box)

> tar -xvzf softsusy-3.4.0.tar.gz
> cd softsusy-3.4.0
> ./configure 
> make

which should compile the code and run some sample commands. There are five C++
test programs, which can be run by the commands

> ./softsusy.x > inOutFiles/outputTest
> ./rpvsoftsusy.x > inOutFiles/rpvOutputTest
> ./rpvneut.x > inOutFiles/neutOutputTest
> ./softsusy-nmssm.x > inOutFiles/outputTest-nmssm

These executables by default DO NOT use any input files, and all output is
redirected to standard output.

> ./softpoint.x

This last executable requires additional command line options. For instance, 
you can run the SUSY Les Houches Accord input provided by running the commands
(the program uses no input aside from standard input)
> ./softpoint.x leshouches < inOutFiles/lesHouchesInput > inOutFiles/lesHouchesOutput
> ./softpoint.x leshouches < inOutFiles/nmssmSLHAnoZ3Input > inOutFiles/nmssmSLHAnoZ3Output
> ./softpoint.x leshouches < inOutFiles/nmssmSLHAZ3Input > inOutFiles/nmssmSLHAZ3Output
> ./softpoint.x leshouches < inOutFiles/rpvHouchesInput > inOutFiles/rpvHouchesOutput
> ./softpoint.x leshouches < inOutFiles/slha2Input > inOutFiles/slha2Output
All of the output files mentioned here are produced by the Makefile, along
with many others in the benchmarks/ subdirectory. These may be otherwise
produced by running the commands
> ./softpoint.x leshouches < benchmarks/filename.in > benchmarks/filename.spec
for each individual filename listed there.

Alternatively, run it with command line inputs, for example
> ./softpoint.x nmssm sugra --m0=125 --m12=125 --a0=-300 --tanBeta=10 --lambda=0.1 --lambdaAtMsusy

INTRODUCTION
------------

The most recent version of SOFTSUSY and full documentation can be obtained
from: http://softsusy.hepforge.org/

This program provides a SUSY spectrum in the NMSSM, or the MSSM including
flavour violation and with or without R-parity consistent with input Standard
Model fermion mass/mixings and electroweak/strong coupling data. The R-parity
violating mode can calculate neutrino masses and mixings to 1 loop. 

REFERENCES
----------

If you use SOFTSUSY to write a paper, please cite (see MCnet guidelines)

[1] B.C. Allanach, Comput. Phys. Commun. 143 (2002) 305-331, hep-ph/0104145,

which is the SOFTSUSY manual for the R-parity conserving MSSM. If you
calculate in the NMSSM, please cite [1] and 
[2] B.C. Allanach, P. Athron, L. Tunstall, A. Voigt and A. Williams,
arXiv:1311.7659. 

If you use the R-parity violating aspects, please cite [1] and
[3] B.C. Allanach and M.A. Bernhardt, Comput. Phys. Commun. 181 (2010) 232,
arXiv:0903.1805. 

If you use it to calculate neutrino masses and mixings, please cite [1], [3] and
[4] B.C. Allanach, M. Hanussek and C.H. Kom, Comput. Phys. Commun. 183 (2012)
785, arXiv:1109.3735. 

CALCULATING DECAYS IN THE NMSSM
-------------------------------

To link with NMSSMTools, so that SOFTSUSY NMSSM output can be piped through it
(to calculate decays, for example), you'll need to download and
NMSSMTools. Then, you can link it using by running 
> ./setup_nmssmtools.sh --nmssmtools-dir=/path/to/NMSSMTools --compile 
After this, there will be an additional executable ./softsusy_nmssmtools.x
that calculates the spectrum with SOFTSUSY, and decays with NMSSMTools. It can
be run by (for example): 
> ./softsusy_nmssmools.x leshouches < inOutFiles/nmssmSLHAnoZ3Input 
If you use it, you should of course provide the proper citations to
NMSSMTools. Using the program in this mode, you should make sure in the SLHA
input file that Block SOFTSUSY variables 15 and 17 are set to 1. 

If you use SOFTSUSY to write a paper, please cite B.C. Allanach,
Comp. Phys. Comm. 143 (2002) 305, hep-ph/0104145, which is the SOFTSUSY
manual. If you use the R-parity violating aspects, please cite
B.C. Allanach and M.A. Bernhardt, Comp. Phys. Comm. 181 (2010) 232,
arXiv:0903.1805 [hep-ph]. 
If you use neutrino masses or mixings, please cite
B.C. Allanach, M. Hanussek and C.H. Kom, Comput. Phys. Commun. 183 (2012) 785,
arXiv:1109.3735 [hep-ph].
The manuals on the electronic hep-ph/ archive will be updated with the most
recent version.  

There are detailed comparisons between SOFTSUSY and other publicly available
codes in 
        * Precise Determination of the Neutral Higgs Boson Masses in the MSSM,
	B.C. Allanach, A. Djouadi, J.L. Kneur, W. Porod, P. Slavich, JHEP 0409
	(2004) 044, hep-ph/0406166, 
        * Theoretical uncertainties in sparticle mass predictions from
	computational tools, B.C. Allanach, S. Kraml, W. Porod, JHEP 03 (2003)
	045, hep-ph/0302102  

EXECTUABLE FILES: AFTER INSTALLATION
------------------------------------
    * softpoint.x: command-line interface. GMSB, AMSB, mSUGRA and general
    boundary conditions possible. Main program: src/softpoint.cpp
    * softsusy.x: example C++ test program - calculates spectrum of SPS1a
    mSUGRA point with varying tan beta. Main program: src/main.cpp
    * softsusy-nmssm.x: example NMSSM test program - loops over tan beta. Main
    program: src/main-nmssm.cpp
    * rpvsoftsusy.x: example C++ test program - calculates spectrum of SPS1a
    mSUGRA point with varying lambda'_{331}(M_GUT). Main program: 
    src/rpvmain.cpp
    * rpvneut.x: example neutrino mass calculating R-parity violating 
    test program. Main program: src/rpvneut.cpp

LICENSE
-------

    SOFTSUSY Copyright (C) 2007 B.C. Allanach

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    See http://www.gnu.org/licenses/.  

